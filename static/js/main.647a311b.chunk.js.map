{"version":3,"sources":["imagenes/cryptomonedas.png","components/Resultado.js","components/Spinner.js","components/Formulario.js","App.js","index.js"],"names":["module","exports","ResultadoStyled","styled","div","Resultado","cotizacion","className","PRICE","HIGHDAY","LOWDAY","CHANGEPCT24HOUR","LASTUPDATE","Spinner","FormularioStyled","Formulario","useState","cripto","setCripto","criptomoneda","moneda","select","setSelect","undefined","setCotizacion","spinner","setSpinner","useEffect","fetch","then","result","json","respuesta","Data","handleButton","e","preventDefault","DISPLAY","setTimeout","Change","target","name","value","onSubmit","onChange","map","type","key","CoinInfo","Id","Internal","FullName","id","codigo","nombre","onClick","AppStyled","App","src","img","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.647a311b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cryptomonedas.96e45d69.png\";","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst ResultadoStyled  = styled.div`\r\ntext-align: center;\r\npadding-bottom: 50px;\r\n  color: #fff;\r\n  p{\r\n      font-size: 18px;\r\n      span{\r\n          font-weight: bold;\r\n      }\r\n  }\r\n  .precio{\r\n      font-size: 30px ;\r\n  }\r\n`;\r\n\r\n\r\nexport default function Resultado({cotizacion}) {\r\n\r\n    return (\r\n        <ResultadoStyled>\r\n              {cotizacion ? \r\n              <>\r\n               <p className=\"precio\">El precio es: <span>{cotizacion.PRICE}</span></p> \r\n               <p>Precio mas alto del dia: <span>{cotizacion.HIGHDAY}</span></p> \r\n               <p>Precio mas bajo del dia: <span>{cotizacion.LOWDAY}</span></p> \r\n               <p>Variazion ultimas 24 horas: <span>{cotizacion.CHANGEPCT24HOUR}</span></p> \r\n               <p>Ultima actualizacion: <span>{cotizacion.LASTUPDATE}</span></p> \r\n               \r\n               </> \r\n               : null}\r\n        </ResultadoStyled>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Spinner.css'\r\n\r\nexport default function Spinner() {\r\n    return (\r\n\r\n \r\n        <div className=\"sk-chase\">\r\n        <div className=\"sk-chase-dot\"></div>\r\n        <div className=\"sk-chase-dot\"></div>\r\n        <div className=\"sk-chase-dot\"></div>\r\n        <div className=\"sk-chase-dot\"></div>\r\n        <div className=\"sk-chase-dot\"></div>\r\n        <div className=\"sk-chase-dot\"></div>\r\n      </div>\r\n   \r\n    )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Resultado from './Resultado'\r\nimport Spinner from './Spinner'\r\n\r\n\r\nconst FormularioStyled = styled.div`\r\ntext-align: center;\r\nmin-height: 600px;\r\n  form {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n  }\r\n  .enviar {\r\n    margin-bottom: 20px;\r\n    color: #fff;\r\n    font-weight: 700;\r\n    width: 60%;\r\n    height: 40px;\r\n    background: #265a66;\r\n    border: none;\r\n    border-radius: 5px;\r\n    box-shadow: 0px 5px 20px rgba(255, 255, 255, 0.3);\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n    &:hover {\r\n      background: #3a8b9e;\r\n    }\r\n  }\r\n  select {\r\n    width: 70%;\r\n    -webkit-appearance: none;\r\n    border-radius: 5px;\r\n    padding: 10px;\r\n\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n\r\n  h1 {\r\n    text-align: center;\r\n    font-weight: 200;\r\n    font-size: 40px;\r\n    color: #fff;\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    line-height: 45px;\r\n    &::after {\r\n      content: \"\";\r\n      text-align: center;\r\n      margin: 20px auto;\r\n      width: 100px;\r\n      height: 6px;\r\n      background-color: #66a2fe;\r\n      display: block;\r\n    }\r\n  }\r\n\r\n  .criptomoneda,\r\n  .moneda {\r\n    height: 200px;\r\n    text-align: center;\r\n\r\n    color: #fff;\r\n    font-weight: 700;\r\n    font-size: 20px;\r\n    letter-spacing: 0.2px;\r\n    width: 50%;\r\n    span {\r\n      display: block;\r\n\r\n      margin: 30px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function Formulario() {\r\n  const [cripto, setCripto] = useState([]);\r\n const [ select,setSelect] = useState({\r\n     criptomoneda: '',\r\n     moneda: ''\r\n })\r\n  const [cotizacion,setCotizacion] = useState(undefined)\r\n\r\n  const Monedas = [\r\n    { id: 1, codigo: \"USD\", nombre: \"Dolar Estado Unidense\" },\r\n    { id: 2, codigo: \"MXN\", nombre: \"Peso Mexicano\" },\r\n    { id: 3, codigo: \"EUR\", nombre: \"Euro\" },\r\n    { id: 4, codigo: \"GBP\", nombre: \"Libra Esterlina\" },\r\n ];\r\n\r\n  const [spinner,setSpinner] = useState(false) \r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      \"https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD\"\r\n    )\r\n      .then((result) => result.json())\r\n      .then((respuesta) => setCripto(respuesta.Data));\r\n  }, []);\r\n\r\n  const handleButton = (e) => {\r\n    e.preventDefault();\r\n   if(select.criptomoneda && select.moneda){\r\n          fetch(\r\n      `https://min-api.cryptocompare.com/data/pricemultifull?fsyms=${select.criptomoneda}&tsyms=${select.moneda}`\r\n    )\r\n      .then((result) => result.json())\r\n      .then((respuesta) => setCotizacion(respuesta.DISPLAY[select.criptomoneda][select.moneda])); \r\n      setSpinner(true)\r\n      setTimeout(()=>{\r\n      setSpinner(false)\r\n      },2000)\r\n           \r\n   }\r\n\r\n  };\r\n \r\n   const Change = e => {\r\n      setSelect({...select,  [e.target.name]: e.target.value })\r\n   }\r\n  return (\r\n    <FormularioStyled>\r\n      <h1>COTIZA CRIPTOMONEDAS AL INSTANTE</h1>\r\n      <form onSubmit={handleButton}>\r\n\r\n        <div className=\"criptomoneda\">\r\n          <span> Elige una CriptoMoneda </span>\r\n          <select onChange={Change} name=\"criptomoneda\">\r\n            <option value=\"selection\"> --SELECTION-- </option>\r\n            {cripto\r\n              ? cripto.map((type) => (\r\n                  <option key={type.CoinInfo.Id} value={type.CoinInfo.Internal}>\r\n                    {\" \"}\r\n                    {type.CoinInfo.FullName}{\" \"}\r\n                  </option>\r\n                ))\r\n              : null}\r\n          </select>\r\n        </div>\r\n        <div className=\"moneda\">\r\n          <span> Elige una Moneda </span>\r\n          <select onChange={Change} name=\"moneda\">\r\n            <option value=\"selection\"> --SELECTION-- </option>\r\n            {Monedas.map((moneda) => (\r\n              <option key={moneda.id} value={moneda.codigo}>\r\n                {\" \"}\r\n                {moneda.nombre}{\" \"}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <button onClick={handleButton} className=\"enviar\" type=\"submit\">\r\n          {\" \"}\r\n          COTIZAR{\" \"}\r\n        </button>\r\n      </form>\r\n      \r\n      {spinner ? <Spinner/> : <Resultado cotizacion={cotizacion}/>  }\r\n     \r\n   \r\n    </FormularioStyled>\r\n  );\r\n}\r\n","import React from 'react';\nimport img from './imagenes/cryptomonedas.png'\nimport styled from 'styled-components';\nimport Formulario from './components/Formulario'\nconst AppStyled = styled.div`\n  margin: auto;\n display: grid;\n width: 70%; \n grid-template-columns: repeat(2,1fr);\n column-gap: 2rem;\n margin-top: 5rem;\n @media (max-width: 764px )\n {\n  width: 80%;\n  display: flex;\n  flex-direction: column;\n\n   text-align: center;\n }\n .imagen img{\n  width: 100%;\n    object-fit: cover; \n   \n }\n\n`;\n\n\n\nfunction App() {\n  return (\n    <AppStyled >  \n      <div className=\"imagen\"><img src={img} alt=\"none\"/> </div>\n       <div> <Formulario/>  </div>\n       \n        \n         </AppStyled>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}